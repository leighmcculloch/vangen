package main

import (
	"bytes"
	"testing"

	"github.com/sergi/go-diff/diffmatchpatch"
)

func TestGenerateIndex(t *testing.T) {
	testCases := []struct {
		description string
		domain      string
		r           []repository
		expectedOut string
		expectedErr error
	}{
		{
			description: "basic",
			domain:      "example.com",
			r: []repository{
				{
					Prefix: "pkg1",
					Subs:   []sub{{Name: "subpkg1"}, {Name: "subpkg2"}},
					Main:   true,
				},
				{
					Prefix: "pkg2",
					Subs:   []sub{{Name: "subpkg1"}, {Name: "subpkg2/subsubpkg1"}},
				},
				{
					Prefix: "pkg3",
					Hidden: true,
				},
			},
			expectedOut: `<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>example.com Go Modules</title>
<style>
* { font-family: sans-serif; }
body { margin-top: 0; }
.content { display: inline-block; }
</style>
</head>
<body>
<div class="content">

<h2>example.com Go Modules</h2>

<h3>Tools:</h3>

<ul>
<li>
<a href="/pkg1">pkg1</a>
<ul><li><a href="/pkg1/subpkg1">subpkg1</a></li><li><a href="/pkg1/subpkg2">subpkg2</a></li></ul></li>
</ul>

<h3>Libraries:</h3>

<ul>
<li>
<a href="/pkg2">pkg2</a>
<ul><li><a href="/pkg2/subpkg1">subpkg1</a></li><li><a href="/pkg2/subpkg2/subsubpkg1">subpkg2/subsubpkg1</a></li></ul></li>
</ul>

<hr/>

Generated by <a href="https://4d63.com/vangen">vangen</a>.

</div>
</body>
</html>`,
			expectedErr: nil,
		},
		{
			description: "hidden sub-package",
			domain:      "example.com",
			r: []repository{
				{
					Prefix: "pkg1",
					Subs:   []sub{{Name: "subpkg1"}, {Name: "subpkg2"}, {Name: "subpkg3", Hidden: true}},
					Main:   true,
				},
				{
					Prefix: "pkg2",
					Subs:   []sub{{Name: "subpkg1"}, {Name: "subpkg2/subsubpkg1"}, {Name: "subpkg2/subsubpkg2", Hidden: true}},
				},
			},
			expectedOut: `<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>example.com Go Modules</title>
<style>
* { font-family: sans-serif; }
body { margin-top: 0; }
.content { display: inline-block; }
</style>
</head>
<body>
<div class="content">

<h2>example.com Go Modules</h2>

<h3>Tools:</h3>

<ul>
<li>
<a href="/pkg1">pkg1</a>
<ul><li><a href="/pkg1/subpkg1">subpkg1</a></li><li><a href="/pkg1/subpkg2">subpkg2</a></li></ul></li>
</ul>

<h3>Libraries:</h3>

<ul>
<li>
<a href="/pkg2">pkg2</a>
<ul><li><a href="/pkg2/subpkg1">subpkg1</a></li><li><a href="/pkg2/subpkg2/subsubpkg1">subpkg2/subsubpkg1</a></li></ul></li>
</ul>

<hr/>

Generated by <a href="https://4d63.com/vangen">vangen</a>.

</div>
</body>
</html>`,
			expectedErr: nil,
		},
	}

	for _, tc := range testCases {
		var out bytes.Buffer
		err := generate_index(&out, tc.domain, tc.r)
		if err != tc.expectedErr {
			t.Errorf("Test case %#v got err %#v, want %#v", tc, err, tc.expectedErr)
		} else if out.String() != tc.expectedOut {
			dmp := diffmatchpatch.New()
			diffs := dmp.DiffMain(tc.expectedOut, out.String(), false)
			t.Errorf("Test case %q got: \n%s\nAs diff:\n%s", tc.description, out.String(), dmp.DiffPrettyText(diffs))
		}
	}
}
